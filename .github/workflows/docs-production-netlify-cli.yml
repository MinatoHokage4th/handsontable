name: Docs Production Deployment - Netlify CLI

env:
  GHA_DOCKER_TAG: docker.pkg.github.com/${{ github.repository }}/handsontable-documentation
  NODE_VERSION: 20
  DOCSEARCH_API_KEY: ${{ secrets.DOCSEARCH_API_KEY }}
  DOCSEARCH_APP_ID: ${{ secrets.DOCSEARCH_APP_ID }}

on:
  push:
    branches:
      - feature/dev-issue-1790
      # - master
  workflow_dispatch:

defaults:
  run:
    working-directory: ./docs/

jobs:
  docker:
    name: Build Docs
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # https://github.com/actions/checkout/releases/tag/v4.1.1
        with:
          ref: prod-docs/latest-dev-issue-1790
      - name: print list of branches without fetching, use ls-remote
        run: git ls-remote --heads origin | awk '{print $2}' | sed 's/refs\/heads\///' | grep 'prod-docs/'
      - name: Set the latest version
        working-directory: ./  
        run: |
          latest_version=`git ls-remote --heads origin | awk '{print $2}' | sed 's/refs\/heads\///' | grep 'prod-docs/' | grep -oP '(?<=prod-docs/)\d+\.\d+' | awk 'max=="" || $1 > max {max=$1} END{print max}'`
          echo "$latest_version"
          echo "LATEST_VERSION=$latest_version" >> $GITHUB_ENV
      - name: Validate Docs version
        run: if [ -z "$LATEST_VERSION" ]; then echo "Docs version is empty"; exit 1; fi

      - name: Remove local branch if it exists
        run: |
          git branch -D prod-docs/latest || true

      - name: Recreate the latest branch baset on the latest version
        run: |
          git checkout prod-docs/$LATEST_VERSON
          git checkout -b prod-docs/latest
          git push --force origin prod-docs/latest

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # https://github.com/actions/setup-node/releases/tag/v4.0.2
        with:
          # cache-dependency-path: ./latest/package-lock.json
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Dependencies
        run: |
          npm ci

      - name: Docs build
        run: |
          npm run docs:build:production:netlify

      - name: Install Netlify CLI
        run: npm install netlify-cli -g

      - name: "commit changes"
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Docs: build production"
          commit_user_name: "Docs Deployment"
          commit_user_email: "docs-deployment@handsontable.com"

      - name: Deploy to Netlify
        run: netlify deploy --prod --prodIfUnlocked --dir .vuepress/dist/docs/
        env:
            NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
            NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
